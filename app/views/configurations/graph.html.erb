<div id="viewport" class="container-fluid" style="height: 512px; padding: 0px;"></div>

<script>
function processNodes(gs) {
  <% Exchange.all.each do |ex| %>
    gs.add({
      data: {
        id: "exchange_node_<%= ex.id %>",
	name: "<%= ex.display_name %>",
	url: <%= raw exchange_path(ex).to_json %>
      },
      style: {
	      width: <%= ex.display_name.length * 8.2 %>,
	      height: "20px"
      }
    });
  <% end %>

  <% MessageRoute.all.each do |mr| %>
    <% if mr.from_exchange.fanout_exchange? %>
	    var mr_node_<%= mr.id%> = gs.add({
		    data: {
			    source: "exchange_node_<%= mr.from_exchange_id %>",
			    target: "exchange_node_<%= mr.to_exchange_id %>",
			    url: <%= raw message_route_path(mr).to_json %>
		    }
	    }); 
    <% elsif mr.from_exchange.headers_exchange? %>
	    gs.add({
		    data: {
			    id: "mr_headers_<%= mr.id %>",
			    name: <%= raw node_name_for_header_route(mr) %>,
			    url: <%= raw message_route_path(mr).to_json %>
	            },
		    style: {
			    "text-wrap": "wrap",
			    width: "80px",
			    height: "40px",
			    color: "black",
			    "background-color": "white",
			    "border-width": "1px",
                            "border-color": "black"
		    }
	    });
	    gs.add({
		    data: {
			    source: "exchange_node_<%= mr.from_exchange_id %>",
			    target: "mr_headers_<%= mr.id %>",
			    url: <%= raw message_route_path(mr).to_json %>
		    }
	    });
	    <% if header_arguments_for(mr).count > 0 %>
  	    <% header_arguments_for(mr).each do |ra| %>
	    gs.add({
		    data: {
			    name: <%= raw header_argument_name_for(ra) %>,
			    source: "mr_headers_<%= mr.id %>",
			    target: "exchange_node_<%= mr.to_exchange_id %>",
			    url: <%= raw message_route_path(mr).to_json %>
		    }
	    });
            <% end %>
	    <% else %>
	    gs.add({
		    data: {
			    name: "NO HEADERS SPECIFIED",
			    source: "mr_headers_<%= mr.id %>",
			    target: "exchange_node_<%= mr.to_exchange_id %>",
			    url: <%= raw message_route_path(mr).to_json %>
		    }
	    });
            <% end %>
    <% else %>
	    gs.add({
		    data: {
			    name: "<%= mr.routing_key %>",
			    source: "exchange_node_<%= mr.from_exchange_id %>",
			    target: "exchange_node_<%= mr.to_exchange_id %>",
			    url: <%= raw message_route_path(mr).to_json %>
		    }
	    });
    <% end %>
  <% end %>
}

$(function() {
	var cy = cytoscape({
		container: $('#viewport'),
		style: [
		{
			selector: "node",
			style: {
				content: "data(name)",
				"background-color": "green",
				height: "label",
				shape: "rectangle",
				"text-valign": "center",
				"text-halign": "center",
				color: "white"
			}
		},
		{
			selector: "edge",
			style: {
				label: "data(name)",
				"target-arrow-shape": "triangle",
				"edge-text-rotation" : "autorotate",
				"width" : "5px"
			}
		}	
		]
	});
	processNodes(cy);
	cy.on('tap', 'node', function(evt) {
		var url_data = evt.cyTarget.data("url");
		if (url_data != null) {
                  window.open(url_data);
		}
	});
	cy.on('tap', 'edge', function(evt) {
		var url_data = evt.cyTarget.data("url");
		if (url_data != null) {
                  window.open(url_data);
		}
	});
	cy.layout({name: "breadthfirst", directed: true, fit: true, maximalAdjustments: 3, spacingFactor: 0.75});
});
</script>
